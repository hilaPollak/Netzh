<UserControl x:Class="Hits.Views.Grids.UpdateReportGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:m="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:Converters="clr-namespace:Hits.Helpers.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:vm="clr-namespace:BL.ViewModels;assembly=BL"
             xmlns:local="clr-namespace:Hits.Views.Grids"
             xmlns:helpers="clr-namespace:Hits.Helpers"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" Height="600" Width="1024">
    <UserControl.DataContext>
        <vm:UpdatedReportViewModel/>
    </UserControl.DataContext>

    <!--#region Resources and triggers-->

    <UserControl.Resources>
        <Converters:TimeToStringConverter x:Key="TimeToString"/>
        <Converters:IntStringConverter x:Key="IntToString"/>
        <Converters:StringLocationConverter x:Key="StringToLocation"/>
        <Converters:UpdatedToText x:Key="BooleanToText"/>
        <Style x:Key="MyTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="FontSize" Value="{StaticResource TextSize}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TitleTextColor}"/>
        </Style>
        <Storyboard x:Key="Storyboard1">
            <DoubleAnimation Storyboard.TargetName="FirstGrid" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.15"/>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="FirstGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-1024"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="SecondGrid" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="SecondGrid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-1024"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Storyboard2">
            <DoubleAnimation Storyboard.TargetName="FirstGrid" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="FirstGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="-1024"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="SecondGrid" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.15"/>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="SecondGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="-1024"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="Added">
            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="SuccessLabel" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Failed">
            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetName="FailedLabel" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="UpdateButton">
            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="SendUpdateButton">
            <BeginStoryboard Storyboard="{StaticResource Storyboard2}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="checkBox1">
            <BeginStoryboard Storyboard="{StaticResource Added}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="checkBox2">
            <BeginStoryboard Storyboard="{StaticResource Failed}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <!--#endregion-->

    <Grid x:Name="GridTest" Background="LightGray" Visibility="Visible"  Margin="250,42,2,0">
        <Grid x:Name="updateGrid"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="UPDATE REPORT" FontFamily="Century Gothic" Foreground="#FF28457A" FontSize="30" FontWeight="Bold" Margin="53,5,5,5" Grid.Row="1"/>

            <!--#region First Grid-->
            <Grid x:Name="FirstGrid" Grid.Row="2" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="50 20 50 20">
                    <Grid Margin="0,0,290,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="1" FontFamily="Century Gothic" VerticalAlignment="Center"
                             Text="{Binding UpdatedReport.ReportID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IntToString}}"
                             Style="{StaticResource MyTextBoxStyle}"  Foreground="#FF28457A"
                             materialDesign:HintAssist.Hint="Enter report ID number" materialDesign:HintAssist.IsFloating="True"/>
                        <DatePicker Grid.Row="0" FontFamily="Century Gothic" x:Name="date" Margin="5 10 5 10"  VerticalAlignment="Center"
                                    SelectedDate="{Binding Analysis.SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Foreground="#FF28457A" BorderBrush="{StaticResource TitleTextColor}" 
                                    FontSize="{StaticResource TextSize}" materialDesign:HintAssist.Hint="Select date of report" materialDesign:HintAssist.IsFloating="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedDateChanged">
                                    <i:InvokeCommandAction Command="{Binding DateChangedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DatePicker>
                    </Grid>
                </Grid>
                <Button x:Name="UpdateButton" FontFamily="Century Gothic" Margin="50,29,337,73" Content="Update" Command="{Binding Path=FetchReportCommand}" Background="#FF28457A" BorderBrush="#FF28457A" Grid.Row="1"/>
            </Grid>
            <!--#endregion-->

            <!--#region Second Grid-->
            <Grid x:Name="SecondGrid" Grid.Row="2" Margin="1020,0,-1011,0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" Width="763">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="19*"/>
                    <RowDefinition Height="7*"/>
                </Grid.RowDefinitions>
                <Grid Margin="45,10,50,0" Grid.Row="0" VerticalAlignment="Top" Height="324">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DatePicker x:Name="kuk" FontFamily="Century Gothic" Height="46" Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom"
                                materialDesign:HintAssist.Hint="Select real date" IsEnabled="False" materialDesign:HintAssist.IsFloating="True"
                                SelectedDate="{Binding UpdatedReport.NewTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                BorderBrush="{StaticResource TitleTextColor}" 
                                Foreground="#FF28457A" 
                                FontSize="{StaticResource TextSize}" Margin="0,0,88,0"/>
                    <materialDesign:TimePicker Grid.Row="1" FontFamily="Century Gothic" Foreground="#FF28457A" Grid.Column="0" VerticalAlignment="Bottom" 
                                               materialDesign:HintAssist.Hint="Select  real time" materialDesign:HintAssist.IsFloating="True"
                                               SelectedTime="{Binding UpdatedReport.NewTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                               BorderBrush="{StaticResource TitleTextColor}" 
                                               FontSize="{StaticResource TextSize}" Margin="0,0,88,0" />
                    <TextBox Grid.Row="2" FontFamily="Century Gothic" Foreground="#FF28457A" Grid.Column="0" Style="{StaticResource MyTextBoxStyle}"
                             Text="{Binding UpdatedReport.NumberOfHits, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource IntToString}}"
                             materialDesign:HintAssist.Hint="The real number of hits" Margin="0,0,88,0" materialDesign:HintAssist.IsFloating="True"/>
                    <TextBox Grid.Row="3" FontFamily="Century Gothic" Foreground="#FF28457A" Grid.Column="0" Style="{StaticResource MyTextBoxStyle}"
                             Text="{Binding UpdatedReport.NewCoordinates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             materialDesign:HintAssist.Hint="Latitude, Longtitude" Margin="0,0,88,0" materialDesign:HintAssist.IsFloating="True"/>

                    <m:Map x:Name="newLocation" Grid.Column="1" Grid.RowSpan="4" FontSize="20" ZoomLevel="14.1" IsEnabled="False"
                           Center="{Binding Path=UpdatedReport.NewCoordinates ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToLocation}}"  
                           Margin="0,10,11,-76"
                           CredentialsProvider="AkPhyCeOVq36r1D35gqF20pEwrklZT9WfhIYhzhsRl7NZ2FYOFbazkUSiCWAnJqV">
                        <m:Pushpin x:Name="newLocationPin" Location="{Binding Path=UpdatedReport.NewCoordinates ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToLocation}}">
                            <materialDesign:PackIcon Kind="Bomb" Foreground="Black"/>
                        </m:Pushpin>
                    </m:Map>
                </Grid>
                <StackPanel Grid.Row="1" Orientation="Vertical" Margin="45,0,454,28" Height="63" VerticalAlignment="Bottom">
                    <Button Content="Commit update" Command="{Binding AddUpdatedReportCommand}" Background="#FF28457A"/>
                    <TextBlock x:Name="SuccessLabel" Visibility="Collapsed" FontFamily="Century Gothic" HorizontalAlignment="Center" Text="Report sent successfully!" Foreground="{StaticResource TextColor}" FontSize="{StaticResource titleTextSize}"/>
                    <TextBlock x:Name="FailedLabel" Visibility="Collapsed" FontFamily="Century Gothic" Foreground="Red" HorizontalAlignment="Center" Text="Failed to sent report" FontSize="{StaticResource titleTextSize}"/>
                    <CheckBox x:Name="checkBox1" Visibility="Collapsed" IsChecked="{Binding Signal.SuccessfullyAdded}"/>
                    <CheckBox x:Name="checkBox2" Visibility="Collapsed" IsChecked="{Binding Signal.UnsuccessfullyAdded}"/>
                </StackPanel>
                <Button x:Name="SendUpdateButton"  Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" HorizontalAlignment="Left"
                        Height="34" VerticalAlignment="Top" Width="34"
                        Background="{x:Null}" BorderBrush="{x:Null}" Padding="0" Margin="45,10,0,0">
                    <materialDesign:PackIcon Kind="ArrowBack" Foreground="#FF28457A" Height="35" Width="35"/>
                </Button>
            </Grid>
            <!--#endregion-->
        </Grid>
    </Grid>
</UserControl>
